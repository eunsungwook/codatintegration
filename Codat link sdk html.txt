<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Codat Link Integration</title>
  <style>
    #codat-link-container {
      width: 460px;
      height: 840px;
      position: fixed;
      inset: 0;
      display: none; /* Hide initially */
    }
  </style>
</head>
<body>
  <form id="company-form">
    <label for="company-name">Enter your company name:</label>
    <input type="text" id="company-name" required>
    <button type="submit">Submit</button>
  </form>
  <div id="codat-link-container"></div>

  <script type="module">
    import { CodatLink } from "https://link-sdk.codat.io";

    const linkSdkTarget = document.querySelector("#codat-link-container");
    const form = document.querySelector("#company-form");

    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      const companyName = document.querySelector("#company-name").value;

      // Create the company on Codat
      const companyId = await createCompanyOnCodat(companyName);

      // Open Codat Link modal
      openModal(companyId);
    });

    const createCompanyOnCodat = async (companyName) => {
      const response = await fetch("https://api.codat.io/companies", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Authorization": "Basic YOUR_API_KEY", // Replace with your actual Codat API Key
        },
        body: JSON.stringify({
          name: companyName,
        }),
      });

      const data = await response.json();
      return data.id;
    };

    const openModal = (companyId) => {
      linkSdkTarget.style.pointerEvents = "initial";
      linkSdkTarget.style.display = "block"; // Show the container
      new CodatLink({
        target: linkSdkTarget,
        props: {
          companyId,
          onConnection: (connection) => alert(`On connection callback = ${connection.connectionId}`),
          onClose: () => {
            linkSdkTarget.style.pointerEvents = "none";
            linkSdkTarget.innerHTML = '';
            linkSdkTarget.style.display = "none"; // Hide the container
          },
          onFinish: () => alert("On finish callback"),
          onError: (error) => alert(`On error callback: ${error.message}`),
        },
      });
    };
  </script>
</body>
</html>
